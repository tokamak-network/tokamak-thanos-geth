name: Tokamak Geth Publish

on:
  push:
    tags:
      - 'release-*'

jobs:
  start-runners:
    name: Start EC2 Runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.ACCESS_TOKEN }}
          ec2-image-id: ami-01bd9dc38789ab007
          ec2-instance-type: t4g.2xlarge
          subnet-id: subnet-4aa53021
          security-group-id: sg-03165a21a3ba6e8b3

      - name: Runner status
        id: status
        run: |
          echo "Runner label:" ${{ steps.start-ec2-runner.outputs.label }}
          echo "EC2 instances id:" ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}

  docker:
    needs: [start-runners]
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-latest, ARM64]
    steps:
      - name: Get versions
        id: extractver
        run: echo "RELEASE=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Docker Image Name
        id: docker-image-name
        run: |
          ARCHITECTURE=$(uname -m)
          if [ "$ARCHITECTURE" = "x86_64" ]; then
            ARCHITECTURE="amd64"
          fi
          if [ "$ARCHITECTURE" = "aarch64" ]; then
            ARCHITECTURE="arm64"
          fi
          echo "docker-image-name=onthertech/thanos-op-geth:nightly-${{ steps.extractver.outputs.RELEASE }}-$ARCHITECTURE" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          provenance: false
          tags: ${{ steps.docker-image-name.outputs.docker-image-name }}

  stop-runners:
    name: Stop self-hosted EC2 runners
    needs: [start-runners, docker]
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.ACCESS_TOKEN }}
          label: ${{ needs.start-runners.outputs.label }}
          ec2-instance-id: ${{ needs.start-runners.outputs.ec2-instance-id }}

  merge:
    name: Build multi-arch images
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: Get versions
        id: extractver
        run: echo "RELEASE=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Create and push manifest
        uses: Noelware/docker-manifest-action@master
        with:
          inputs: onthertech/thanos-op-geth:nightly-${{ steps.extractver.outputs.RELEASE }}
          images: onthertech/thanos-op-geth:nightly-${{ steps.extractver.outputs.RELEASE }}-amd64,onthertech/thanos-op-geth:nightly-${{ steps.extractver.outputs.RELEASE }}-arm64
          push: true
